#!/bin/bash

# - > à exécuter depusi un poste debian, sur leequel git est installé, ainsi que SSH

export MAISON_OPS=.
export USER_LX_OPERATEUR_SERVEUR_DISTANT=jibl
export NOM_HOTE_RESEAU_SERVEUR_DISTANT=production-docker-host-1.kytes.io
# Je veux créer le répertoire surlequel je vais monter le disque dur externe:
# Ce répertoire sera différent à chaque backup, il ne sera jamais le même, par sécurité.
export CHEMIN_MAISON_KYTES_DRP=/media/jbl/disque/dur/externe/pour/bckups/kytes-bckup-storage-$HORODATAGE_OPS
export REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=/home/jibl/infra-kytes
export CHEMIN_LIEN_SYMBOLIQUE_BCKUP_DS_SERVEUR=./most_recent_backup.zip

cd $MAISON_OPS


export UUID_DE_MON_DISQUE_DUR_EXTERNE=70BE639EBE635B9A

export UUID_DE_MON_DISQUE_DUR_EXTERNE=$(sudo blkid|grep Seagate|awk '{print $5}'|awk -F '"' '{print $2}')
echo "   VERIF_UUID_DISQUE_DUR_EXTERNE : UUID_DE_MON_DISQUE_DUR_EXTERNE=$UUID_DE_MON_DISQUE_DUR_EXTERNE"
echo " Pressez entrée pour continuer  "
read VERIF_UUID_DISQUE_DUR_EXTERNE
# redhat grown ...
if [ "UUID_DE_MON_DISQUE_DUR_EXTERNE" == "x$UUID_DE_MON_DISQUE_DUR_EXTERNE" ]; then
  echo "La procédure de backup ne trouve pas le disque dur externe Seagate: Est-il bien branché? "
  echo "Procédez aux vérifications, puis relancez ce script"
  exit 1
fi


cd exploitation

echo " -------------------------------------- "
echo "  Déconnectez, puis reconnectez, le     "
echo "  disque dur externe. "
echo "  (Cela relancera la palpation Linux).  "
echo " -------------------------------------- "
echo "  Pressez ensuite Entrée.  "
echo " -------------------------------------- "
read DEBRACNHER_REBRANCHER_MAXTOR

chmod +x ./monter-disque-dur-externe.sh


# 
# Ce script prend TOUJOURS deux arguements, dans cet ordre :
# $1 => le UUID du disque de backup à monter
# $2 => le chemin du répertoire, point de montage du disque de backup.
# $3 => le type de filesystem : `ext3`, `ext4`, `ntfs-3g` (pour le diques dur externe qui ont été formatés en NTFS) / etc...
# 
./monter-disque-dur-externe.sh $UUID_DE_MON_DISQUE_DUR_EXTERNE $CHEMIN_MAISON_KYTES_DRP ntfs-3g

echo "   Maintenant, le disque dur externe devrait être monté sur CHEMIN_MAISON_KYTES_DRP=$CHEMIN_MAISON_KYTES_DRP "
echo " "
echo " Vérif du cotenu : "
echo " -------------------------------------- "
ls -all $CHEMIN_MAISON_KYTES_DRP
echo " -------------------------------------- "
echo " "
echo " Pressez entrée pour continuer  "
read VERIF_MONTAGE_DISQUE_DUR_EXTERNE



clear
echo " -------------------------------------- "
echo "   Maintenant, ouvrez une session shall "
echo "   en oaralèlle de celle-ci, et connectez-vous"
echo "   en ssh au serveur cible, avec l'insdtruction : "
echo "    [ssh -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io]   "
echo "   Exécutez-y les instrcutions suivantes pour lancer le backup manuel : "
echo "    [cd $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR && chmod +x exploitation/backup.sh && exploitation/backup.sh] "
echo " -------------------------------------- "

# j'exécute à disquance le script backup : il a été installé au git clone lors de la provision / restauration la plus récente de 'll=infrastructure.
# ssh -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io -C "cd $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR && chmod +x exploitation/backup.sh"
# ssh -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io -C "export CHEMIN_LIEN_SYMBOLIQUE_BCKUP_DS_SERVEUR=$CHEMIN_LIEN_SYMBOLIQUE_BCKUP_DS_SERVEUR && cd $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR && exploitation/backup.sh"
# je récupère le ZIP produit

# echo " OK, TODO : il faut farie evoluer l'ensemble del a procédure de backup : pourquoi pas utiliser un lien symboliquedans exploitation/backup.sh, ' ln -s $NOM_FICHIER_ZIP_PRODUIT_QUI_CONTIENT_DATE_IMPREVISISBLE    $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/most_recent_backup.zip '  "
# exit 1

echo " -------------------------------------- "
echo "  Dernière étape: onrécupère le backup  "
echo "  pour le stocker sur disque dur externe "
echo " -------------------------------------- "

rm -f canttouchthis.kytes 
ssh -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io -C "ls -all ~/infra-kytes|grep monbckupleplusrecent.zip |awk '{print \$11}'  >> ./canttouchthis.kytes"
scp -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io:~/canttouchthis.kytes .
export NOM_FICHIER_ZIP_PRODUIT=$(cat canttouchthis.kytes) 
# exemple : ./kytes-bckup-2018-10-27day_21h-09min-00sec.zip
scp -i ~/.ssh/id_rsa $USER_LX_OPERATEUR_SERVEUR_DISTANT@$NOM_HOTE_RESEAU_SERVEUR_DISTANT:/home/jibl/infra-kytes/$NOM_FICHIER_ZIP_PRODUIT ./$NOM_FICHIER_ZIP_PRODUIT

# -> vérification chaînée de l'intégrité, sinon lopération échoue
zip -T ./$NOM_FICHIER_ZIP_PRODUIT >> ./$NOM_FICHIER_ZIP_PRODUIT.integrity.live || exit 1

# Et il ne reste plus qu'à copier le zip obtenu dans le stockage physiquement distinct: backup restore de type (1,2)
echo "  "
echo "Je suis $(whoami), et je backup l'infra kytes vers le répetoire  : "
echo " [$CHEMIN_MAISON_KYTES_DRP] "
ehco "  "
cp -rf $NOM_FICHIER_ZIP_PRODUIT $CHEMIN_MAISON_KYTES_DRP 
