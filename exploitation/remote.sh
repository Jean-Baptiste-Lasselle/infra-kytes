#!/bin/bash

# - > à exécuter depusi un poste debian, sur leequel git est installé, ainsi que SSH

export MAISON_OPS=$HOME/running-kytes-backup-restore-ops
export URI_DE_CETTE_RECETTE=https://github.com/Jean-Baptiste-Lasselle/infra-kytes
export USER_LX_OPERATEUR_SERVEUR_DISTANT=jibl
export NOM_HOTE_RESEAU_SERVEUR_DISTANT=production-docker-host-1.kytes.io
# Je veux créer le répertoire surlequel je vais monter le disque dur externe:
# Ce répertoire sera différent à chaque backup, il ne sera jamais le même, par sécurité.
export CHEMIN_MAISON_KYTES_DRP=/media/jbl/disque/dur/externe/pour/bckups/kytes-bckup-storage-$(date '+%Y-%m-%dday_%Hh-%Mmin-%Ssec')
export REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=/carto/proto
export CHEMIN_LIEN_SYMBOLIQUE_BCKUP_DS_SERVEUR=./most_recent_backup.zip
cd MAISON_OPS


export UUID_DE_MON_DISQUE_DUR_EXTERNE=70BE639EBE635B9A

export UUID_DE_MON_DISQUE_DUR_EXTERNE=$(sudo blkid|grep Seagate|awk '{print $5}'|awk -F '"' '{print $2}')
echo "UUID_DE_MON_DISQUE_DUR_EXTERNE=$UUID_DE_MON_DISQUE_DUR_EXTERNE"

# redhat grown ...
if [ "UUID_DE_MON_DISQUE_DUR_EXTERNE" == "x$UUID_DE_MON_DISQUE_DUR_EXTERNE" ]; then
  echo "La procédure de backup ne trovue pas le disque dur externe Seagate: Est-il bien branché? "
  echo "Procédez aux vérifications, puis relancez ce script"
  exit 1
fi
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
echo " !!!!!!!!!!!  TRES TRES TRES IMPORTANT : le git clone devr récupérer exactement la même version que celle sur le serveur en RUN"
# TODO ==>>>> farie évoluer pour cloner une version bien idntifiée, iso avecle serveur cible.
git clone "$URI_DE_CETTE_RECETTE" . 

cd exploitation
chmod +x ./monter-disque-dur-externe.sh
# 
# Ce script prend TOUJOURS deux arguements, dans cet ordre :
# $1 => le UUID du disque de backup à monter
# $2 => le chemin du répertoire, point de montage du disque de backup.
# $3 => le type de filesystem : `ext3`, `ext4`, `ntfs-3g` (pour le diques dur externe qui ont été formatés en NTFS) / etc...
# 
./monter-disque-dur-externe.sh $UUID_DE_MON_DISQUE_DUR_EXTERNE $CHEMIN_MAISON_KYTES_DRP ntfs-3g
# attention, pour exécuter silencieusement la recette, il sera encore mieux de 
# coller, surle serveur distant, ma clé publique RSA dans les $HOME/jibl/.ssh/authorized_keys
# ssh $USER_LX_OPERATEUR_SERVEUR_DISTANT@$NOM_HOTE_RESEAU_SERVEUR_DISTANT "bash -s" -- < ./ex.bash "--time" "bye"

# export NOM_FICHIER_ZIP_PRODUIT=$(ssh $USER_LX_OPERATEUR_SERVEUR_DISTANT@$NOM_HOTE_RESEAU_SERVEUR_DISTANT "bash -s" -- < ./backup.sh)

# j'exécute à disquance le script backup : il a été installé au git clone lors de la provision / restauration la plus récente de 'll=infrastructure.
ssh -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io -C "cd $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR && chmod +x exploitation/backup.sh"
ssh -i ~/.ssh/id_rsa jibl@production-docker-host-1.kytes.io -C "export CHEMIN_LIEN_SYMBOLIQUE_BCKUP_DS_SERVEUR=$CHEMIN_LIEN_SYMBOLIQUE_BCKUP_DS_SERVEUR && cd $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR && exploitation/backup.sh"
# je récupère le ZIP produit

echo " OK, TODO : il faut farie evoluer l'ensemble del a procédure de backup : pourquoi pas utiliser un lien symboliquedans ./backup.sh, ' ln -s $NOM_FICHIER_ZIP_PRODUIT_QUI_CONTIENT_DATE_IMPREVISISBLE    $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/most_recent_backup.zip '  "
exit 1
scp $USER_LX_OPERATEUR_SERVEUR_DISTANT@$NOM_HOTE_RESEAU_SERVEUR_DISTANT:/home/jibl/infra-kytes/$NOM_FICHIER_ZIP_PRODUIT ./$NOM_FICHIER_ZIP_PRODUIT

# Et il ne reste plus qu'à copier le zip obtenu dans le stockage physiquement distinct: backup restore de type (1,2)
echo "  "
echo "Je suis $(whoami), et je backup l'infra kytes vers le répetoire  : "
echo " [$CHEMIN_MAISON_KYTES_DRP] "
ehco "  "
cp -rf  $CHEMIN_MAISON_KYTES_DRP 
