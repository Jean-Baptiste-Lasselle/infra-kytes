# - 
# d'abord, il faut s'assurer que l'horodatage système est bien synchronisé
# sur le serveur NTP principal configuré dans [/etc/ntp.conf]
# -
sudo ntpd -gq
# - 
# L'horodatage de la présente opération de restauration
# - 
export HORODATAGE_OPS=$(date '+%Y-%m-%dday_%Hh-%Mmin-%Ssec')
export OPERATIONS_HOME=/kytes-ops/restaurations/$HORODATAGE_OPS/


# L'URI du repo Git de versionning de la recette de provision
# https://github.com/Jean-Baptiste-Lasselle/infra-kytes
export URI_RECETTE_PROVISION_KYTES=$1
# L'URI du repo Git de versionning de la recette de provision
# export URI_RECETTE_PROVISION_KYTES=https://github.com/Jean-Baptiste-Lasselle/infra-kytes
# L'URI du repo Git de versionning de la recette de restauration
# export URI_RECETTE_RESTAURATION_KYTES=https://github.com/Jean-Baptiste-Lasselle/infra-kytes
export URI_RECETTE_RESTAURATION_KYTES=$2

# Le chemin absolu du fichier de BACKUP envoyé sur la machine cible, par l'opérateur, pour effectuer cette restauration
export CHEMIN_ABSOLU_FICHIER_BACKUP=$3


# l'utilisateur linux, opérateur légitime sur la machine cible
export USER_LX_OPERATEUR_SERVEUR_DISTANT=jibl

export CHEMIN_MAISON_KYTES_DRP=/media/jbl/disque/dur/externe/pour/bckups/kytes-bckup-storage-$HORODATAGE_OPS

export REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=/home/jibl/infra-kytes


if [ -d $OPERATIONS_HOME ]; then echo "Cest inattendu, mais [$OPERATIONS_HOME] existe déjà"; sudo rm -rf $OPERATIONS_HOME; fi;
sudo mkdir -p $OPERATIONS_HOME

cd $OPERATIONS_HOME

if [ -d $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR ]; then echo " [$REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR] existe déjà, et va être supprimé et re-créé pour la restauration"; sudo rm -rf $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR; fi;
mkdir -p $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR

echo "  "
echo " -------------------------- "
echo "  "
echo " -------------------------- "
echo " VERIF AVANT GIT CLONE     : "
echo " -------------------------- "
echo "  "
echo " Contenu du répertoire [REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=$REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR] : "
echo "  "
ls -all $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR
echo "  "

# on commence par rétablir la version de provision
git clone "$URI_RECETTE_PROVISION_KYTES" $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR
# on rétablit les répertoires de données, qui sont dans le backup:
echo "  "
echo " -------------------------- "
echo "  "
echo " -------------------------- "
echo " VERIF AVANT UNZIP BACKUP : "
echo " -------------------------- "
echo "  "
echo " CHEMIN_ABSOLU_FICHIER_BACKUP=$CHEMIN_ABSOLU_FICHIER_BACKUP "
echo " REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=$REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR "
echo "  "
echo " Contenu du répertoire [REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=$REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR] : "
echo "  "
ls -all $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR
echo "  "
# echo " CHEMIN_ABSOLU_FICHIER_BACKUP=$CHEMIN_ABSOLU_FICHIER_BACKUP "
# echo " CHEMIN_ABSOLU_FICHIER_BACKUP=$CHEMIN_ABSOLU_FICHIER_BACKUP "
echo "  "
echo "  Pressez Entrée pour poursuivre"
echo " -------------------------- "
read ATTENDS2

unzip -o $CHEMIN_ABSOLU_FICHIER_BACKUP -d $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR
# - essai 1 => je remplace tous les fichiers, j'écrase si un fichier est déjà existant
# - '-o' :  overwrite files WITHOUT prompting 

# - propriété à root...
sudo chown -R root:root $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/gitlab/config
sudo chown -R root:root $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/gitlab/logs
sudo chown -R root:root $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/gitlab/data
# - droits maximaux du propriétaire
sudo chmod a+rwx -R $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/gitlab/config
sudo chmod a+rwx -R $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/gitlab/logs
sudo chmod a+rwx -R $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/gitlab/data
# - parce que j'ai du le faire
chmod a +rwx infra-kytes/gitlab/config/gitlab-secrets.json

# -> on rend les droits des exacts volumes mappés dans le docker-compose.yml, pour le service gitlab
#      - ./gitlab/config:/etc/gitlab
#      - ./gitlab/logs:/var/log/gitlab
#      - ./gitlab/data:/var/opt/gitlab

echo "  "
echo " -------------------------- "
echo "  "
echo " -------------------------- "
echo " VERIF APRES UNZIP BACKUP : "
echo " -------------------------- "
echo "  "
echo "  "
echo " Contenu du répertoire [REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR=$REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR] : "
echo "  "
ls -all $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR
echo "  "
echo "  Pressez Entrée pour poursuivre"
echo " -------------------------- "
read ATTENDS3

# Enfin, on redémarre tout
chmod +x $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR/**/*.*

cd $REPERTOIRE_EXPLOITATION_KYTES_DANS_SERVEUR
echo " avant docker-compose up -d "
echo " presser une touche pour continuer " 
read ATTENDSDOCKER
# docker-compose up -d
# Suite aux problèmes avec les "ulimit" configuration
docker-compose up -d && sudo chown -R root:root ~/infra-kytes/gitlab/data/ && docker stop kytes_gitlab_service && docker start kytes_gitlab_service && docker exec -it kytes_gitlab_service sh -c "gitlab-ctl reconfigure" && docker-compose restart nginx
# sudo chown -R root:root ~/infra-kytes/gitlab/data/git-data/
# sudo chown -R root:root infra-kytes/gitlab/data/gitlab-shell
# sudo chown -R root:root infra-kytes/gitlab/data/.ssh
# sudo chown -R root:root infra-kytes/gitlab/data/.bundle
# sudo chown -R root:root infra-kytes/gitlab/data/.gitconfig
# donc autant faire un  
# sudo chown -R root:root infra-kytes/gitlab/data
