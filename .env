# + cf. "Kytes"

# -- KYTES --
KYTES_USERNAME_UTILISATEUR_ADMIN_INITIAL=superjbl
KYTES_MDP_UTILISATEUR_ADMIN_INITIAL=mdpsuperjbl
KYTES_EMAIL_UTILISATEUR_ADMIN_INITIAL=superjbl@kytes.io


# + la "apiKey" Gitlab, qui doit être utilisée parle XXX, pour accéder à un compte Gitlab (et effectuer des créations de repo Gits, pour les process fleuris.) 
KYTES_GITLAB_API_KEY=jdf563lv6jT6416DGTF566HEDthbgdbdgfd65gf69
KYTES_GITLAB_TOKEN=cNhsExCcNhsExicNhsExx


# -- CIBLE DEPLOIMENT --
# - L'adresse IP de l'Hôte Docker, cible du dpéloiement de cette recette 
ADRESSE_IP_HOTE_DOCKER=192.168.1.29
# 
# Le seul nom de domaine, qui ne soit pas référencé dans la configuration NGINX. 
# Il s'agit juste de pouvoir atteindre l'hôte DOcker, en tant qu'hôte docker, avec un nom de 
# domaine différent de tout ceux référencés dans la configuration reverse proxy NGINX.
# 
NOM_DOMAINE_HOTE_DOCKER=production-docker-host-1.kytes.io
NOM_DU_RESEAU_INFRA_DOCKER=devops
NOM_CONTENEUR_GITLAB=kytes_gitlab_service


# -- NGINX --
# NGINX_PROXY_NETWORK_NAME=nginxproxy_default
NUMERO_PORT_ECOUTE_REVERSE_PROXY=80

# -- GITLAB --
NOM_CONTENEUR_GITLAB=kytes_gitlab_service
# https://hub.docker.com/r/gitlab/gitlab-ce/tags/
# https://hub.docker.com/r/gitlab/gitlab-ce/tags/
GITLAB_CE_VERSION=11.2.1-ce.0
# https://hub.docker.com/r/gitlab/gitlab-runner/tags/
GITLAB_RUNNER_VERSION=alpine-v11.2.0
POSTGRES_VERSION=9.6.8-alpine
REDIS_VERSION=3-alpine
HOTE_RESEAU_GITLAB=gitlab.kytes.io
GITLAB_HOST=gitlab.kytes.io
# GITLAB_HOST=http://gitlab.kytes.io:8083/
GITLAB_SSH_IP=0.0.0.0
GITLAB_SSH_PORT=2222
GITLAB_HTTP_IP=0.0.0.0
GITLAB_HTTP_PORT=8083
GITLAB_HTTPS_IP=0.0.0.0
GITLAB_HTTPS_PORT=9443
# - GITLAB_TRUSTED_PROXY ...??? Kezako? cf. https://docs.gitlab.com/omnibus/docker/
# GITLAB_TRUSTED_PROXY=172.18.0.0/16
# - lorsque l'on utilise gitlab comme un registry docker
# REGISTRY_HOST=docker.kytes.io
# - ça, je pense que ce sont les "pages" , du wiki ou du "gist" - like (cf. github / gist pages)
PAGES_HOST=pages.kytes.io
# La valeur de "GITLAB_HTTP_PORT_VIA_NGINX_INTERNE_GITLAB" est dupliquée, et le sera par templatisation ansible, dans [./gitlab/gitlab.rb] 
GITLAB_HTTP_PORT_VIA_NGINX_INTERNE_GITLAB=8089
# le numéro de port utilisé pour la configuration du reverse proxy coquelicot, et pour le port externe du conteneur docker Gitlab (cf. ./docker-compose.yml, section 'ports:')
GITLAB_HTTP_PORT_DEPUIS_EXTERIEUR_CONTENEUR_DOCKER=8087
# GITLAB_HTTP_PORT est une variable attendue, par le conteneur Docker distribué par Gitlab. Sa valeur doit être : 
# GITLAB_HTTP_PORT=$GITLAB_HTTP_PORT_VIA_NGINX_INTERNE_GITLAB


# -- RocketChat Playground -- #
NOM_CONTENEUR_ROCKETCHAT=rocketchat
# - 
USERNAME_UTILISATEUR_ADMIN_INITIAL=jibjib
# L'utilisateur initial, n'est plus l'utiliateur RocketChat que HUBOT utilise: il créée l'utilisateur utilisé par HUBOT
MDP_UTILISATEUR_ADMIN_INITIAL=superjib
EMAIL_UTILISATEUR_ADMIN_INITIAL=superjib@jbl.io
# + Joueurs
# TODO => transformer 'UTILISATEUR_ROCKETCHAT_HUBOT' en 'UTILISATEUR_ROCKETCHAT_JOUEUR'
# TODO => transformer 'UTILISATEUR_ROCKETCHAT_HUBOT_MDP' en 'UTILISATEUR_ROCKETCHAT_JOUEUR_MDP'
# UTILISATEUR_ROCKETCHAT_HUBOT=vinse
# UTILISATEUR_ROCKETCHAT_HUBOT_MDP=vinse
UTILISATEUR_ROCKETCHAT_JOUEUR=vinse
UTILISATEUR_ROCKETCHAT_JOUEUR_MDP=vinse
# - Comme toutes les applications développées avec le framwork Meteor, par défaut, le port d'écoute est le port 3000.
NUMERO_PORT_ECOUTE_ROCKETCHAT=3000



# -- LETS ENCRYPT -- 
LETSENCRYPT_EMAIL=contact@mydomain.io

# -- TIME ZONES, CULTURES, & LANGUAGES
TZ=Europe/Paris


# -- VERSIONS IMAGES DOCKER -- 
# + À noter : ces variables d'envrionnement sont utilisée à la fois dans le docker-compose.yml, mais ne peuvent être utilisées dans les fichiers Dockerfile ('on recourera à du template jinja2 / ansible)
VERSION_IMAGE_CENTOS=centos:7
# VERSION_IMAGE_GITLAB_CE=gitlab/gitlab-ce:$GITLAB_CE_VERSION
# VERSION_IMAGE_GITLAB_RUNNER=gitlab/gitlab-runner:${GITLAB_RUNNER_VERSION}
VERSION_IMAGE_NGINX=nginx:latest
VERSION_IMAGE_ROCKETCHAT=rocketchat/rocket.chat:latest
VERSION_IMAGE_MONGO=mongo:latest
# VERSION_IMAGE_POSTGRES=postgres:${POSTGRES_VERSION}
# VERSION_IMAGE_REDIS=redis:{REDIS_VERSION}

