version: '3'

services:
  # Pour la conf gitlab + runner + postgres + redis => cf [https://github.com/mgcrea/docker-compose-gitlab-ce], many
  # thanks to Olivier ;) https://github.com/mgcrea
  gitlab:
    image: gitlab/gitlab-ce:${GITLAB_CE_VERSION}
    restart: always
    container_name: "$NOM_CONTENEUR_GITLAB"
    hostname: "gitlab.marguerite.io"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.marguerite.io:8083/'
        gitlab_rails['lfs_enabled'] = true
    ports:
      # 0.0.0.0 : 8081 : 80 
      - ${GITLAB_HTTP_IP}:${GITLAB_HTTP_PORT}:80
      - ${GITLAB_HTTPS_IP}:${GITLAB_HTTPS_PORT}:443
      - ${GITLAB_SSH_IP}:${GITLAB_SSH_PORT}:22
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/logs:/var/log/gitlab
      - ./gitlab/data:/var/opt/gitlab
    depends_on:
      - redis
      - postgres
    networks:
      - "$NOM_DU_RESEAU_INFRA_DOCKER"
 
  postgres:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    container_name: gitlab_postgresql
    # https://github.com/docker-library/docs/tree/master/postgres#environment-variables
    environment:
      - POSTGRES_USER=gitlab
      - POSTGRES_DB=gitlabhq_production
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data:rw
    restart: always
    networks:
      - "$NOM_DU_RESEAU_INFRA_DOCKER"
      
  redis:
    image: redis:${REDIS_VERSION}
    restart: always
    container_name: gitlab_redis
    command:
      - --loglevel warning
    volumes:
      - ./volumes/redis:/var/lib/redis:rw
    restart: always
    networks:
      - "$NOM_DU_RESEAU_INFRA_DOCKER"
    volumes:
      - ./hubot/scripts:/home/hubot/scripts:rw
    expose:
      - 3001
    ports:
      - 3001:3001
    # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    networks:
      - "$NOM_DU_RESEAU_INFRA_DOCKER"
    depends_on:
      # + le prochain palier de remontée du plongueur, cf. HEALTHCHECK rocketchat
      - gitlab
  nginx:
    image: nginx
#     hostname: "proxy"
    container_name: "reverseproxy"
    restart: always
    volumes:
      - ./nginx/infra-kytes.conf:/etc/nginx/conf.d/infra-kytes.conf:rw
#       - ./nginx/hosts:/etc/hosts
      - ./nginx/logs:/var/log/nginx:rw
#      - ./nginx/certificates:/etc/nginx/certificates/:rw
      - ./nginx/jenkins.conf:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"
#      - "22:22"
    expose:
      - "3000"
      - "80"
      - "443"
#      - "22"
    environment:
#       - NGINX_HOST=marguerite.io
#       - GIT_HOST=gitlab.marguerite.io
#       - CHAT_HOST=rocketchat.marguerite.io
      - NGINX_PORT=80
      - NGINX_SSL=443
#       - NGINX_SSH=22
    networks:
      - "$NOM_DU_RESEAU_INFRA_DOCKER"
    depends_on:
      - gitlab

# --- Tests : Réseau
  sondereseau:
    # image: mongo:3.2
    image: marguerite/sonde-reseau:0.0.1
    build: ./tests/sondereseau/
#     hostname: "sondereseau"
    container_name: 'sondereseau'
    tty: true
#     command: yum update -y && yum install -y iputils && ping -c 4 localhost
    networks:
      - "$NOM_DU_RESEAU_INFRA_DOCKER"
    # restart: 'always'


networks:
  devops:
    # name: 'reseau-devops'
    driver: bridge
#     external: true 
#     ipam:
#       config:
#         - subnet: 192.168.160.0/24
#         - gateway: 192.168.160.1
#         # - gateway: 172.16.1.1
